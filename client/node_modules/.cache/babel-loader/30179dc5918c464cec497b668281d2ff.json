{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/ProjectOfficeRead.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectOfficeRead extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyControllers: null,\n      dataKeyShafts: null,\n      dataKeyDoors: null,\n      dataKeyButtons: null,\n      dataKeyDisplays: null,\n      dataKeySpeakers: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.ProjectOffice; // let drizzle know we want to watch the `myString` method\n\n    const dataKeyControllers = contract.methods[\"Controllers\"].cacheCall();\n    const dataKeyShafts = contract.methods[\"Shafts\"].cacheCall();\n    const dataKeyDoors = contract.methods[\"Doors\"].cacheCall();\n    const dataKeyButtons = contract.methods[\"Buttons\"].cacheCall();\n    const dataKeyDisplays = contract.methods[\"Displays\"].cacheCall();\n    const dataKeySpeakers = contract.methods[\"Speakers\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyControllers,\n      dataKeyShafts,\n      dataKeyDoors,\n      dataKeyButtons,\n      dataKeyDisplays,\n      dataKeySpeakers\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      ProjectOffice\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const controllers = ProjectOffice.Controllers[this.state.dataKeyControllers];\n    const shafts = ProjectOffice.Shafts[this.state.dataKeyShafts];\n    const doors = ProjectOffice.Doors[this.state.dataKeyDoors];\n    const buttons = ProjectOffice.Buttons[this.state.dataKeyButtons];\n    const displays = ProjectOffice.Displays[this.state.dataKeyDisplays];\n    const speakers = ProjectOffice.Speakers[this.state.dataKeySpeakers]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Controllers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Shafts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Doors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Buttons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Displays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Speakers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: controllers && controllers.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: shafts && shafts.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doors && doors.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: buttons && buttons.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: displays && displays.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: speakers && speakers.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ProjectOfficeRead;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/ProjectOfficeRead.js"],"names":["React","ProjectOfficeRead","Component","state","dataKeyControllers","dataKeyShafts","dataKeyDoors","dataKeyButtons","dataKeyDisplays","dataKeySpeakers","componentDidMount","drizzle","props","contract","contracts","ProjectOffice","methods","cacheCall","setState","render","drizzleState","controllers","Controllers","shafts","Shafts","doors","Doors","buttons","Buttons","displays","Displays","speakers","Speakers","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass ProjectOfficeRead extends React.Component {\r\n\tstate = { dataKeyControllers: null, dataKeyShafts: null, dataKeyDoors: null, dataKeyButtons: null, dataKeyDisplays: null, dataKeySpeakers: null };\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { drizzle } = this.props;\r\n\t\tconst contract = drizzle.contracts.ProjectOffice;\r\n\r\n\t\t// let drizzle know we want to watch the `myString` method\r\n\t\tconst dataKeyControllers = contract.methods[\"Controllers\"].cacheCall();\r\n    const dataKeyShafts = contract.methods[\"Shafts\"].cacheCall();\r\n    const dataKeyDoors = contract.methods[\"Doors\"].cacheCall();\r\n    const dataKeyButtons = contract.methods[\"Buttons\"].cacheCall();\r\n    const dataKeyDisplays = contract.methods[\"Displays\"].cacheCall();\r\n    const dataKeySpeakers = contract.methods[\"Speakers\"].cacheCall();\r\n\r\n\t\t// save the `dataKey` to local component state for later reference\r\n\t\tthis.setState({ dataKeyControllers, dataKeyShafts, dataKeyDoors, dataKeyButtons, dataKeyDisplays, dataKeySpeakers });\r\n\t}\r\n\r\n\trender() {\r\n\t\t// get the contract state from drizzleState\r\n\t\tconst { ProjectOffice } = this.props.drizzleState.contracts;\r\n\r\n\t\t// using the saved `dataKey`, get the variable we're interested in\r\n\t\tconst controllers = ProjectOffice.Controllers[this.state.dataKeyControllers];\r\n    const shafts = ProjectOffice.Shafts[this.state.dataKeyShafts];\r\n    const doors = ProjectOffice.Doors[this.state.dataKeyDoors];\r\n    const buttons = ProjectOffice.Buttons[this.state.dataKeyButtons];\r\n    const displays = ProjectOffice.Displays[this.state.dataKeyDisplays];\r\n    const speakers = ProjectOffice.Speakers[this.state.dataKeySpeakers];\r\n\r\n\t\t// if it exists, then we display its value\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Controllers</th>\r\n              <th scope=\"col\">Shafts</th>\r\n              <th scope=\"col\">Doors</th>\r\n              <th scope=\"col\">Buttons</th>\r\n              <th scope=\"col\">Displays</th>\r\n              <th scope=\"col\">Speakers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{controllers && controllers.value}</td>\r\n              <td>{shafts && shafts.value}</td>\r\n              <td>{doors && doors.value}</td>\r\n              <td>{buttons && buttons.value}</td>\r\n              <td>{displays && displays.value}</td>\r\n              <td>{speakers && speakers.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ProjectOfficeRead;\r\n"]},"metadata":{},"sourceType":"module"}