{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/SolutionManufacturingRead.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SolutionManufacturingRead extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyElevatorCab: null,\n      dataKeyDoors: null,\n      dataKeyController: null,\n      dataKeyControlPanel: null,\n      dataKeyDisplay: null,\n      dataKeyMusicSystem: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.MaterialProvider; // let drizzle know we want to watch the `myString` method\n\n    const dataKeyElevatorCab = contract.methods[\"ElevatorCab\"].cacheCall();\n    const dataKeyDoors = contract.methods[\"Doors\"].cacheCall();\n    const dataKeyController = contract.methods[\"Controller\"].cacheCall();\n    const dataKeyControlPanel = contract.methods[\"ControlPanel\"].cacheCall();\n    const dataKeyDisplay = contract.methods[\"Display\"].cacheCall();\n    const dataKeyMusicSystem = contract.methods[\"MusicSystem\"].cacheCall();\n    const dataKeyspeakersProvider = contract.methods[\"speakersProvider\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyElevatorCab,\n      dataKeyDoors,\n      dataKeyController,\n      dataKeyControlPanel,\n      dataKeyDisplay,\n      dataKeyMusicSystem,\n      dataKeyspeakersProvider\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MaterialProvider\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const ElevatorCab = MaterialProvider.ElevatorCab[this.state.dataKeyElevatorCab];\n    const Doors = MaterialProvider.Doors[this.state.dataKeyDoors];\n    const Controller = MaterialProvider.Controller[this.state.dataKeyController];\n    const ControlPanel = MaterialProvider.ControlPanel[this.state.dataKeyControlPanel];\n    const Display = MaterialProvider.Display[this.state.dataKeyDisplay];\n    const MusicSystem = MaterialProvider.MusicSystem[this.state.dataKeyMusicSystem]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Elevator Cabe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Doors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Controller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Control Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"MusicSystem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ElevatorCab && ElevatorCab.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Doors && Doors.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Controller && Controller.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ControlPanel && ControlPanel.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Display && Display.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: MusicSystem && MusicSystem.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SolutionManufacturingRead;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/SolutionManufacturingRead.js"],"names":["React","SolutionManufacturingRead","Component","state","dataKeyElevatorCab","dataKeyDoors","dataKeyController","dataKeyControlPanel","dataKeyDisplay","dataKeyMusicSystem","componentDidMount","drizzle","props","contract","contracts","MaterialProvider","methods","cacheCall","dataKeyspeakersProvider","setState","render","drizzleState","ElevatorCab","Doors","Controller","ControlPanel","Display","MusicSystem","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass SolutionManufacturingRead extends React.Component {\r\n    state = {dataKeyElevatorCab: null, dataKeyDoors: null, dataKeyController: null, dataKeyControlPanel: null, dataKeyDisplay: null, dataKeyMusicSystem: null};\r\n  \r\n    componentDidMount() {\r\n      const { drizzle } = this.props;\r\n      const contract = drizzle.contracts.MaterialProvider;\r\n  \r\n      // let drizzle know we want to watch the `myString` method\r\n      const dataKeyElevatorCab = contract.methods[\"ElevatorCab\"].cacheCall();\r\n      const dataKeyDoors = contract.methods[\"Doors\"].cacheCall();\r\n      const dataKeyController = contract.methods[\"Controller\"].cacheCall();\r\n      const dataKeyControlPanel = contract.methods[\"ControlPanel\"].cacheCall();\r\n      const dataKeyDisplay = contract.methods[\"Display\"].cacheCall();\r\n      const dataKeyMusicSystem = contract.methods[\"MusicSystem\"].cacheCall();\r\n      const dataKeyspeakersProvider = contract.methods[\"speakersProvider\"].cacheCall();\r\n  \r\n      // save the `dataKey` to local component state for later reference\r\n      this.setState({ dataKeyElevatorCab, dataKeyDoors, dataKeyController, dataKeyControlPanel, dataKeyDisplay, dataKeyMusicSystem, dataKeyspeakersProvider });\r\n    }\r\n  \r\n    render() {\r\n      // get the contract state from drizzleState\r\n      const { MaterialProvider } = this.props.drizzleState.contracts;\r\n  \r\n      // using the saved `dataKey`, get the variable we're interested in\r\n      const ElevatorCab = MaterialProvider.ElevatorCab[this.state.dataKeyElevatorCab];\r\n      const Doors = MaterialProvider.Doors[this.state.dataKeyDoors];\r\n      const Controller = MaterialProvider.Controller[this.state.dataKeyController];\r\n      const ControlPanel = MaterialProvider.ControlPanel[this.state.dataKeyControlPanel];\r\n      const Display = MaterialProvider.Display[this.state.dataKeyDisplay];\r\n      const MusicSystem = MaterialProvider.MusicSystem[this.state.dataKeyMusicSystem];\r\n  \r\n      // if it exists, then we display its value\r\n      return (\r\n        <div className=\"container\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Elevator Cabe</th>\r\n                <th scope=\"col\">Doors</th>\r\n                <th scope=\"col\">Controller</th>\r\n                <th scope=\"col\">Control Panel</th>\r\n                <th scope=\"col\">Display</th>\r\n                <th scope=\"col\">MusicSystem</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{ElevatorCab && ElevatorCab.value}</td>\r\n                <td>{Doors && Doors.value}</td>\r\n                <td>{Controller && Controller.value}</td>\r\n                <td>{ControlPanel && ControlPanel.value}</td>\r\n                <td>{Display && Display.value}</td>\r\n                <td>{MusicSystem && MusicSystem.value}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SolutionManufacturingRead;\r\n"]},"metadata":{},"sourceType":"module"}