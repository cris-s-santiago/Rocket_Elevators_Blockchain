{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/MaterialsProviderSet.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MaterialsProviderSet extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stackId: null\n    };\n\n    this.getTxStatus = () => {\n      // get the transaction states from the drizzle state\n      const {\n        transactions,\n        transactionStack\n      } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n      const txHash = transactionStack[this.state.stackId]; // if transaction hash does not exist, don't display anything\n\n      if (!txHash) return null; // otherwise, return the transaction status\n\n      return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\n    };\n  }\n\n  handleKeyDown(e, methodName) {\n    // if the enter key is pressed, set the value with the string\n    if (e.keyCode === 13) {\n      this.setValue(e.target.value, methodName);\n    }\n  }\n\n  setValue(value, methodName) {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MaterialsProvider; // let drizzle know we want to call the `set` method with `value`\n\n    const stackId = contract.methods[methodName].cacheSend(value, {\n      from: drizzleState.accounts[0]\n    }); // save the `stackId` for later reference\n\n    this.setState({\n      stackId\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Input your project data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Controllers: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setController')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Shafts: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setShafts')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Doors: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setDoors')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Buttons: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setButtons')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Displays: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setDisplays')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Speakers: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setSpeakers')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProjectOfficeSet;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/MaterialsProviderSet.js"],"names":["React","MaterialsProviderSet","Component","state","stackId","getTxStatus","transactions","transactionStack","props","drizzleState","txHash","status","handleKeyDown","e","methodName","keyCode","setValue","target","value","drizzle","contract","contracts","MaterialsProvider","methods","cacheSend","from","accounts","setState","render","ProjectOfficeSet"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass MaterialsProviderSet extends React.Component {\r\n  state = { stackId: null };\r\n\r\n  handleKeyDown (e, methodName) {\r\n    // if the enter key is pressed, set the value with the string\r\n    if (e.keyCode === 13) {\r\n      this.setValue(e.target.value, methodName);\r\n    }\r\n  };\r\n\r\n  setValue (value, methodName) {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MaterialsProvider;\r\n\r\n    // let drizzle know we want to call the `set` method with `value`\r\n    const stackId = contract.methods[methodName].cacheSend(value, {\r\n      from: drizzleState.accounts[0]\r\n    });\r\n\r\n    // save the `stackId` for later reference\r\n    this.setState({ stackId });\r\n  };\r\n\r\n  getTxStatus = () => {\r\n    // get the transaction states from the drizzle state\r\n    const { transactions, transactionStack } = this.props.drizzleState;\r\n\r\n    // get the transaction hash using our saved `stackId`\r\n    const txHash = transactionStack[this.state.stackId];\r\n\r\n    // if transaction hash does not exist, don't display anything\r\n    if (!txHash) return null;\r\n\r\n    // otherwise, return the transaction status\r\n    return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n       <div className=\"card\" >\r\n       <div className=\"card-header\">\r\n         Input your project data\r\n       </div>\r\n       <ul className=\"list-group list-group-flush\">\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Controllers: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setController')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Shafts: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setShafts')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Doors: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setDoors')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Buttons: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setButtons')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Displays: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setDisplays')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Speakers: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setSpeakers')} />\r\n            </div>\r\n         </li>\r\n       </ul>\r\n       <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n       </div>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectOfficeSet;"]},"metadata":{},"sourceType":"module"}