{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/ProjectOfficeSet.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectOfficeSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stackId: null\n    };\n\n    this.getTxStatus = () => {\n      console.log(\"getTxStatus\"); // get the transaction states from the drizzle state\n\n      const {\n        transactions,\n        transactionStack\n      } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n      const txHash = transactionStack[this.state.stackId];\n      if (!txHash) console.log(\"NULLLLLLL\"); // if transaction hash does not exist, don't display anything\n\n      if (!txHash) return null;\n      console.log(\"txHash\", txHash);\n      console.log(\"transactions[txHash]\", transactions[txHash]); // otherwise, return the transaction status\n\n      return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\n    };\n\n    this.state = {\n      batteries: '',\n      columns: '',\n      elevators: '',\n      floors: '',\n      stackId: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {\n      batteries,\n      columns,\n      elevators,\n      floors\n    } = this.state;\n    event.preventDefault();\n    this.setValue(batteries, columns, elevators, floors);\n    this.getTxStatus();\n    alert(`\n      ____Your Details____\\n\n      Batteries : ${batteries}\n    `);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: event.target.value\n    });\n  }\n\n  setValue(batteries, columns, elevators, floors) {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MyStringStore;\n    console.log(\"New order SetValue\"); // let drizzle know we want to call the `set` method with `value`\n    // const stackId = contract.methods[\"newOrder\"].cacheSend(batteries, columns, elevators, floors, { from: drizzleState.accounts[0] });\n\n    const stackId = drizzle.contracts.MyStringStore.methods.newOrder(batteries, columns, elevators, floors).send({\n      from: drizzleState.accounts[0]\n    }); // save the `stackId` for later reference\n\n    console.log(\"StackId\", stackId);\n    this.setState({\n      stackId\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Input your project data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.getTxStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Batteries: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"batteries\",\n                  value: this.state.batteries,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Columns: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"columns\",\n                  value: this.state.columns,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Elevators: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"elevators\",\n                  value: this.state.elevators,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Floors: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"floors\",\n                  value: this.state.floors,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProjectOfficeSet;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/ProjectOfficeSet.js"],"names":["React","ProjectOfficeSet","Component","constructor","props","state","stackId","getTxStatus","console","log","transactions","transactionStack","drizzleState","txHash","status","batteries","columns","elevators","floors","handleChange","bind","handleSubmit","event","preventDefault","setValue","alert","setState","target","name","value","drizzle","contract","contracts","MyStringStore","methods","newOrder","send","from","accounts","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAOlBC,KAPkB,GAOV;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAPU;;AAAA,SA0ClBC,WA1CkB,GA0CJ,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADkB,CAElB;;AACA,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAqC,KAAKP,KAAL,CAAWQ,YAAtD,CAHkB,CAKlB;;AACA,YAAMC,MAAM,GAAGF,gBAAgB,CAAC,KAAKN,KAAL,CAAWC,OAAZ,CAA/B;AAEA,UAAI,CAACO,MAAL,EAAaL,OAAO,CAACC,GAAR,CAAY,WAAZ,EARK,CASlB;;AACA,UAAI,CAACI,MAAL,EAAa,OAAO,IAAP;AAEbL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,MAAtB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCC,YAAY,CAACG,MAAD,CAAhD,EAbkB,CAclB;;AACA,aAAQ,uBAAsBH,YAAY,CAACG,MAAD,CAAZ,IAAwBH,YAAY,CAACG,MAAD,CAAZ,CAAqBC,MAAO,EAAlF;AACD,KA1DiB;;AAEhB,SAAKT,KAAL,GAAa;AAAEU,MAAAA,SAAS,EAAC,EAAZ;AAAgBC,MAAAA,OAAO,EAAC,EAAxB;AAA4BC,MAAAA,SAAS,EAAC,EAAtC;AAA0CC,MAAAA,MAAM,EAAC,EAAjD;AAAqDZ,MAAAA,OAAO,EAAC;AAA7D,KAAb;AACA,SAAKa,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAIDC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACjB,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA,SAAtB;AAAiCC,MAAAA;AAAjC,QAA2C,KAAKb,KAAtD;AACAiB,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKC,QAAL,CAAcT,SAAd,EAAyBC,OAAzB,EAAkCC,SAAlC,EAA6CC,MAA7C;AACA,SAAKX,WAAL;AACAkB,IAAAA,KAAK,CAAE;AACX;AACA,oBAAoBV,SAAU;AAC9B,KAHS,CAAL;AAID;;AAEDI,EAAAA,YAAY,CAACG,KAAD,EAAO;AACjB,SAAKI,QAAL,CAAc;AACZ;AACA;AACA,OAACJ,KAAK,CAACK,MAAN,CAAaC,IAAd,GAAsBN,KAAK,CAACK,MAAN,CAAaE;AAHvB,KAAd;AAKD;;AAGDL,EAAAA,QAAQ,CAAET,SAAF,EAAaC,OAAb,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyC;AAC/C,UAAM;AAAEY,MAAAA,OAAF;AAAWlB,MAAAA;AAAX,QAA4B,KAAKR,KAAvC;AACA,UAAM2B,QAAQ,GAAGD,OAAO,CAACE,SAAR,CAAkBC,aAAnC;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAH+C,CAK/C;AACA;;AACA,UAAMH,OAAO,GAAGwB,OAAO,CAACE,SAAR,CAAkBC,aAAlB,CAAgCC,OAAhC,CAAwCC,QAAxC,CAAiDpB,SAAjD,EAA4DC,OAA5D,EAAqEC,SAArE,EAAgFC,MAAhF,EAAwFkB,IAAxF,CAA6F;AAACC,MAAAA,IAAI,EAAEzB,YAAY,CAAC0B,QAAb,CAAsB,CAAtB;AAAP,KAA7F,CAAhB,CAP+C,CAQ/C;;AACA9B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACA,SAAKoB,QAAL,CAAc;AAAEpB,MAAAA;AAAF,KAAd;AACD;;AAoBDiC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAA,sBAAM,KAAKd,WAAL;AAAN;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAI,YAAA,SAAS,EAAC,6BAAd;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAC2C,GAD3C,eAEE;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,WAAxB;AAAqC,kBAAA,KAAK,EAAI,KAAKF,KAAL,CAAWU,SAAzD;AAAoE,kBAAA,QAAQ,EAAE,KAAKI;AAAnF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EACyC,GADzC,eAEE;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,SAAxB;AAAmC,kBAAA,KAAK,EAAI,KAAKd,KAAL,CAAWW,OAAvD;AAAgE,kBAAA,QAAQ,EAAE,KAAKG;AAA/E;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAC2C,GAD3C,eAEE;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,WAAxB;AAAqC,kBAAA,KAAK,EAAI,KAAKd,KAAL,CAAWY,SAAzD;AAAoE,kBAAA,QAAQ,EAAE,KAAKE;AAAnF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAbF,eAmBE;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EACwC,GADxC,eAEE;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,QAAxB;AAAkC,kBAAA,KAAK,EAAI,KAAKd,KAAL,CAAWa,MAAtD;AAA8D,kBAAA,QAAQ,EAAE,KAAKC;AAA7E;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eA+BA;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAuCD;;AArG4C;;AAwG/C,eAAelB,gBAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass ProjectOfficeSet extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { batteries:'', columns:'', elevators:'', floors:'', stackId:null}\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  state = { stackId: null };\r\n\r\n  handleSubmit(event){\r\n    const { batteries, columns, elevators, floors} = this.state\r\n    event.preventDefault()\r\n    this.setValue(batteries, columns, elevators, floors);\r\n    this.getTxStatus();\r\n    alert(`\r\n      ____Your Details____\\n\r\n      Batteries : ${batteries}\r\n    `)\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      // Computed property names\r\n      // keys of the objects are computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n\r\n  setValue (batteries, columns, elevators, floors) {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n    console.log(\"New order SetValue\");\r\n\r\n    // let drizzle know we want to call the `set` method with `value`\r\n    // const stackId = contract.methods[\"newOrder\"].cacheSend(batteries, columns, elevators, floors, { from: drizzleState.accounts[0] });\r\n    const stackId = drizzle.contracts.MyStringStore.methods.newOrder(batteries, columns, elevators, floors).send({from: drizzleState.accounts[0]})\r\n    // save the `stackId` for later reference\r\n    console.log(\"StackId\", stackId);\r\n    this.setState({ stackId });\r\n  };\r\n\r\n  getTxStatus = () => {\r\n    console.log(\"getTxStatus\");\r\n    // get the transaction states from the drizzle state\r\n    const { transactions, transactionStack } = this.props.drizzleState;\r\n\r\n    // get the transaction hash using our saved `stackId`\r\n    const txHash = transactionStack[this.state.stackId];\r\n\r\n    if (!txHash) console.log(\"NULLLLLLL\");\r\n    // if transaction hash does not exist, don't display anything\r\n    if (!txHash) return null;\r\n\r\n    console.log(\"txHash\", txHash);\r\n    console.log(\"transactions[txHash]\", transactions[txHash]);\r\n    // otherwise, return the transaction status\r\n    return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"card\" >\r\n          <div className=\"card-header\">\r\n            Input your project data\r\n          </div>\r\n          <div>{this.getTxStatus()}</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Batteries: </div>{\" \"}\r\n                  <input type=\"text\" name=\"batteries\"  value = {this.state.batteries} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Columns: </div>{\" \"}\r\n                  <input type=\"text\" name=\"columns\"  value = {this.state.columns} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Elevators: </div>{\" \"}\r\n                  <input type=\"text\" name=\"elevators\"  value = {this.state.elevators} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Floors: </div>{\" \"}\r\n                  <input type=\"text\" name=\"floors\"  value = {this.state.floors} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n          </ul>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectOfficeSet;\r\n"]},"metadata":{},"sourceType":"module"}