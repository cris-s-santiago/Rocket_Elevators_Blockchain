{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/MaterialProviderSet.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MaterialProviderSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stackId: null\n    };\n\n    this.getTxStatus = () => {\n      console.log(\"getTxStatus\"); // get the transaction states from the drizzle state\n\n      const {\n        transactions,\n        transactionStack\n      } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n      const txHash = transactionStack[this.state.stackId]; // if (!txHash) console.log(\"NULL\");\n      // if transaction hash does not exist, don't display anything\n\n      if (!txHash) return null;\n      console.log(\"txHash\", txHash);\n      console.log(\"transactions[txHash]\", transactions[txHash]);\n      this.saveTransactionAddress(txHash); // otherwise, return the transaction status\n\n      return `Transaction Address: ${txHash}`; // return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\n    };\n\n    this.state = {\n      controllers: '',\n      shafts: '',\n      doors: '',\n      buttons: '',\n      displays: '',\n      speakers: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {\n      controllers,\n      shafts,\n      doors,\n      buttons,\n      displays,\n      speakers\n    } = this.state;\n    event.preventDefault();\n    this.setValue(controllers, shafts, doors, buttons, displays, speakers);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: event.target.value\n    });\n  }\n\n  setValue(controllers, shafts, doors, buttons, displays, speakers) {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MaterialProvider; // let drizzle know we want to call the `set` method with `value`\n\n    const stackId = contract.methods[\"createMaterials\"].cacheSend(controllers, shafts, doors, buttons, displays, speakers, {\n      from: drizzleState.accounts[0]\n    }); // save the `stackId` for later reference\n\n    this.setState({\n      stackId\n    });\n  }\n\n  saveTransactionAddress(transactionAddress) {\n    axios.post('https://rocketblockchain.azurewebsites.net/api/blockchains', {\n      nodeName: 'MaterialProvider',\n      address: transactionAddress\n    }).then(res => {\n      console.log(\"Response\", res);\n      console.log(\"Response Data\", res.data);\n    }).catch(function (error) {\n      console.log(\"ERROR\", error);\n    });\n    console.log(\"End of saveTransactionAddress\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Material Provider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.getTxStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Controllers: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"controllers\",\n                  value: this.state.controllers,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Shafts: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"shafts\",\n                  value: this.state.shafts,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Doors: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"doors\",\n                  value: this.state.doors,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Buttons: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"buttons\",\n                  value: this.state.buttons,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Displays: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"displays\",\n                  value: this.state.displays,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Speakers: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"speakers\",\n                  value: this.state.speakers,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MaterialProviderSet;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/MaterialProviderSet.js"],"names":["React","axios","MaterialProviderSet","Component","constructor","props","state","stackId","getTxStatus","console","log","transactions","transactionStack","drizzleState","txHash","saveTransactionAddress","controllers","shafts","doors","buttons","displays","speakers","handleChange","bind","handleSubmit","event","preventDefault","setValue","setState","target","name","value","drizzle","contract","contracts","MaterialProvider","methods","cacheSend","from","accounts","transactionAddress","post","nodeName","address","then","res","data","catch","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass MaterialProviderSet extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { controllers:'', shafts:'', doors:'', buttons:'', displays:'', speakers:''}\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  state = { stackId: null };\r\n\r\n  handleSubmit(event){\r\n    const { controllers, shafts, doors, buttons, displays, speakers} = this.state\r\n    event.preventDefault()\r\n    this.setValue(controllers, shafts, doors, buttons, displays, speakers);\r\n    \r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      // Computed property names\r\n      // keys of the objects are computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n\r\n  setValue (controllers, shafts, doors, buttons, displays, speakers) {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MaterialProvider;\r\n\r\n    // let drizzle know we want to call the `set` method with `value`\r\n    const stackId = contract.methods[\"createMaterials\"].cacheSend(controllers, shafts, doors, buttons, displays, speakers, { from: drizzleState.accounts[0] });\r\n\r\n    // save the `stackId` for later reference\r\n    this.setState({ stackId });\r\n  }\r\n\r\n  saveTransactionAddress (transactionAddress){\r\n    axios.post('https://rocketblockchain.azurewebsites.net/api/blockchains',{ nodeName: 'MaterialProvider', address: transactionAddress })\r\n      .then(res => {\r\n        console.log(\"Response\", res);\r\n        console.log(\"Response Data\", res.data);\r\n      })\r\n      .catch(function(error){\r\n          console.log(\"ERROR\",error);\r\n      });\r\n    console.log(\"End of saveTransactionAddress\");\r\n  }\r\n\r\n  getTxStatus = () => {\r\n    console.log(\"getTxStatus\");\r\n    // get the transaction states from the drizzle state\r\n    const { transactions, transactionStack } = this.props.drizzleState;\r\n\r\n    // get the transaction hash using our saved `stackId`\r\n    const txHash = transactionStack[this.state.stackId];\r\n\r\n    // if (!txHash) console.log(\"NULL\");\r\n    // if transaction hash does not exist, don't display anything\r\n    if (!txHash) return null;\r\n\r\n    console.log(\"txHash\", txHash);\r\n    console.log(\"transactions[txHash]\", transactions[txHash]);\r\n    this.saveTransactionAddress(txHash);\r\n    // otherwise, return the transaction status\r\n    return `Transaction Address: ${txHash}`\r\n    // return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"card\" >\r\n          <div className=\"card-header\">\r\n            Material Provider\r\n          </div>\r\n          <div>{this.getTxStatus()}</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Controllers: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"controllers\"  value = {this.state.controllers} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Shafts: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"shafts\"  value = {this.state.shafts} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Doors: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"doors\"  value = {this.state.doors} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Buttons: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"buttons\"  value = {this.state.buttons} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Displays: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"displays\"  value = {this.state.displays} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Speakers: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"speakers\"  value = {this.state.speakers} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n          </ul>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MaterialProviderSet;\r\n"]},"metadata":{},"sourceType":"module"}