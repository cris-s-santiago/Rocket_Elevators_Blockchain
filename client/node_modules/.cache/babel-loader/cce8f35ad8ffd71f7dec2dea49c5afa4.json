{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/ProjectOfficeSet.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectOfficeSet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stackId: null\n    };\n\n    this.getTxStatus = () => {\n      console.log(\"getTxStatus\"); // get the transaction states from the drizzle state\n\n      const {\n        transactions,\n        transactionStack\n      } = this.props.drizzleState; // get the transaction hash using our saved `stackId`\n\n      const txHash = transactionStack[this.state.stackId];\n      var transactionAddress = '0x5ec9260523a370aab3c0f3e6c850c6270bcb2eda065cd28fd974980d3056c915'; // if (!txHash) console.log(\"NULL\");\n      // if transaction hash does not exist, don't display anything\n\n      if (!txHash) return null;\n      this.saveTransactionAddress(txHash);\n      console.log(\"txHash\", txHash);\n      console.log(\"transactions[txHash]\", transactions[txHash]);\n      console.log(\"@@@@@@@\", this.props.drizzle.web3.eth.getTransaction(transactionAddress).then(console.log));\n      return `Transaction Address: ${txHash}`;\n    };\n\n    this.state = {\n      batteries: '',\n      columns: '',\n      elevators: '',\n      floors: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {\n      batteries,\n      columns,\n      elevators,\n      floors\n    } = this.state;\n    event.preventDefault();\n    this.setValue(batteries, columns, elevators, floors);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // Computed property names\n      // keys of the objects are computed dynamically\n      [event.target.name]: event.target.value\n    });\n  }\n\n  setValue(batteries, columns, elevators, floors) {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.ProjectOffice; // let drizzle know we want to call the `set` method with `value`\n\n    const stackId = contract.methods[\"newOrder\"].cacheSend(batteries, columns, elevators, floors, {\n      from: drizzleState.accounts[0]\n    }); // save the `stackId` for later reference\n\n    this.setState({\n      stackId\n    });\n  }\n\n  saveTransactionAddress(transactionAddress) {\n    axios.post('https://rocketblockchain.azurewebsites.net/api/blockchains', {\n      nodeName: 'ProjectOffice',\n      address: transactionAddress\n    }).then(res => {\n      console.log(\"Response\", res);\n      console.log(\"Response Data\", res.data);\n    }).catch(function (error) {\n      console.log(\"ERROR\", error);\n    });\n    console.log(\"End of saveTransactionAddress\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Project Office\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.getTxStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Batteries: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"batteries\",\n                  value: this.state.batteries,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Columns: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"columns\",\n                  value: this.state.columns,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Elevators: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"elevators\",\n                  value: this.state.elevators,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-6\",\n                  children: \"Floors: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"floors\",\n                  value: this.state.floors,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProjectOfficeSet;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/ProjectOfficeSet.js"],"names":["React","axios","ProjectOfficeSet","Component","constructor","props","state","stackId","getTxStatus","console","log","transactions","transactionStack","drizzleState","txHash","transactionAddress","saveTransactionAddress","drizzle","web3","eth","getTransaction","then","batteries","columns","elevators","floors","handleChange","bind","handleSubmit","event","preventDefault","setValue","setState","target","name","value","contract","contracts","ProjectOffice","methods","cacheSend","from","accounts","post","nodeName","address","res","data","catch","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass ProjectOfficeSet extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = { batteries:'', columns:'', elevators:'', floors:''}\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  state = { stackId: null };\r\n\r\n  handleSubmit(event){\r\n    const { batteries, columns, elevators, floors} = this.state\r\n    event.preventDefault()\r\n    this.setValue(batteries, columns, elevators, floors);\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      // Computed property names\r\n      // keys of the objects are computed dynamically\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n\r\n  setValue (batteries, columns, elevators, floors) {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.ProjectOffice;\r\n    \r\n    // let drizzle know we want to call the `set` method with `value`\r\n    const stackId = contract.methods[\"newOrder\"].cacheSend(batteries, columns, elevators, floors, { from: drizzleState.accounts[0] });\r\n\r\n    // save the `stackId` for later reference\r\n    this.setState({ stackId });\r\n  }\r\n\r\n  saveTransactionAddress (transactionAddress){\r\n    axios.post('https://rocketblockchain.azurewebsites.net/api/blockchains',{ nodeName: 'ProjectOffice', address: transactionAddress })\r\n      .then(res => {\r\n        console.log(\"Response\", res);\r\n        console.log(\"Response Data\", res.data);\r\n      })\r\n      .catch(function(error){\r\n          console.log(\"ERROR\",error);\r\n      });\r\n    console.log(\"End of saveTransactionAddress\");\r\n  }\r\n\r\n  getTxStatus = () => {\r\n    console.log(\"getTxStatus\");\r\n    // get the transaction states from the drizzle state\r\n    const { transactions, transactionStack } = this.props.drizzleState;\r\n\r\n    // get the transaction hash using our saved `stackId`\r\n    const txHash = transactionStack[this.state.stackId];\r\n\r\n    var transactionAddress = '0x5ec9260523a370aab3c0f3e6c850c6270bcb2eda065cd28fd974980d3056c915';\r\n    // if (!txHash) console.log(\"NULL\");\r\n    // if transaction hash does not exist, don't display anything\r\n    if (!txHash) return null;\r\n\r\n    \r\n    this.saveTransactionAddress(txHash);\r\n\r\n\r\n    console.log(\"txHash\", txHash);\r\n    console.log(\"transactions[txHash]\", transactions[txHash]);\r\n    \r\n    console.log(\"@@@@@@@\",this.props.drizzle.web3.eth.getTransaction(transactionAddress).then(console.log));\r\n\r\n    \r\n    return `Transaction Address: ${txHash}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"card\" >\r\n          <div className=\"card-header\">\r\n            Project Office\r\n          </div>\r\n          <div>{this.getTxStatus()}</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Batteries: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"batteries\"  value = {this.state.batteries} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Columns: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"columns\"  value = {this.state.columns} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Elevators: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"elevators\"  value = {this.state.elevators} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">Floors: </div>{\" \"}\r\n                  <input type=\"number\" min=\"0\" name=\"floors\"  value = {this.state.floors} onChange={this.handleChange}/>\r\n                </div>\r\n            </li>\r\n          </ul>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectOfficeSet;\r\n"]},"metadata":{},"sourceType":"module"}