{"ast":null,"code":"var _jsxFileName = \"/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/MaterialProviderRead.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MaterialProviderRead extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyalumBars: null,\n      dataKeysteelSheets: null,\n      dataKeyrubberBands: null,\n      dataKeylightBulbs: null,\n      dataKeyleds: null,\n      dataKeyspringsProvider: null,\n      dataKeyspeakersProvider: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.MaterialProvider; // let drizzle know we want to watch the `myString` method\n\n    const dataKeyalumBars = contract.methods[\"alumBars\"].cacheCall();\n    const dataKeysteelSheets = contract.methods[\"steelSheets\"].cacheCall();\n    const dataKeyrubberBands = contract.methods[\"rubberBands\"].cacheCall();\n    const dataKeylightBulbs = contract.methods[\"lightBulbs\"].cacheCall();\n    const dataKeyleds = contract.methods[\"leds\"].cacheCall();\n    const dataKeyspringsProvider = contract.methods[\"springsProvider\"].cacheCall();\n    const dataKeyspeakersProvider = contract.methods[\"speakersProvider\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyalumBars,\n      dataKeysteelSheets,\n      dataKeyrubberBands,\n      dataKeylightBulbs,\n      dataKeyleds,\n      dataKeyspringsProvider,\n      dataKeyspeakersProvider\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MaterialProvider\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const alumBars = MaterialProvider.alumBars[this.state.dataKeyalumBars];\n    const steelSheets = MaterialProvider.steelSheets[this.state.dataKeysteelSheets];\n    const rubberBands = MaterialProvider.rubberBands[this.state.dataKeyrubberBands];\n    const lightBulbs = MaterialProvider.lightBulbs[this.state.dataKeylightBulbs];\n    const leds = MaterialProvider.leds[this.state.dataKeyleds];\n    const springsProvider = MaterialProvider.springsProvider[this.state.dataKeyspringsProvider];\n    const speakersProvider = MaterialProvider.speakersProvider[this.state.dataKeyspeakersProvider]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Aluminum bars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Stainless steel sheets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Springs \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Bumper rubber bands\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Interior light bulbs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Display LEDs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Speakers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: alumBars && alumBars.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: steelSheets && steelSheets.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: rubberBands && rubberBands.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: lightBulbs && lightBulbs.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leds && leds.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: springsProvider && springsProvider.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: speakersProvider && speakersProvider.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default MaterialProviderRead;","map":{"version":3,"sources":["/home/cristiane/blockchain/drizzle-react-tutorial/client/src/controllers/MaterialProviderRead.js"],"names":["React","MaterialProviderRead","Component","state","dataKeyalumBars","dataKeysteelSheets","dataKeyrubberBands","dataKeylightBulbs","dataKeyleds","dataKeyspringsProvider","dataKeyspeakersProvider","componentDidMount","drizzle","props","contract","contracts","MaterialProvider","methods","cacheCall","setState","render","drizzleState","alumBars","steelSheets","rubberBands","lightBulbs","leds","springsProvider","speakersProvider","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass MaterialProviderRead extends React.Component {\r\n  state = {dataKeyalumBars: null, dataKeysteelSheets: null, dataKeyrubberBands: null, dataKeylightBulbs: null, dataKeyleds: null, dataKeyspringsProvider: null, dataKeyspeakersProvider: null};\r\n  \r\n  componentDidMount() {\r\n\t\tconst { drizzle } = this.props;\r\n\t\tconst contract = drizzle.contracts.MaterialProvider;\r\n\r\n\t\t// let drizzle know we want to watch the `myString` method\r\n\t\tconst dataKeyalumBars = contract.methods[\"alumBars\"].cacheCall();\r\n    const dataKeysteelSheets = contract.methods[\"steelSheets\"].cacheCall();\r\n    const dataKeyrubberBands = contract.methods[\"rubberBands\"].cacheCall();\r\n    const dataKeylightBulbs = contract.methods[\"lightBulbs\"].cacheCall();\r\n    const dataKeyleds = contract.methods[\"leds\"].cacheCall();\r\n    const dataKeyspringsProvider = contract.methods[\"springsProvider\"].cacheCall();\r\n    const dataKeyspeakersProvider = contract.methods[\"speakersProvider\"].cacheCall();\r\n\r\n\t\t// save the `dataKey` to local component state for later reference\r\n\t\tthis.setState({ dataKeyalumBars, dataKeysteelSheets, dataKeyrubberBands, dataKeylightBulbs, dataKeyleds, dataKeyspringsProvider, dataKeyspeakersProvider });\r\n\t}\r\n\r\n\trender() {\r\n\t\t// get the contract state from drizzleState\r\n\t\tconst { MaterialProvider } = this.props.drizzleState.contracts;\r\n\r\n\t\t// using the saved `dataKey`, get the variable we're interested in\r\n\t\tconst alumBars = MaterialProvider.alumBars[this.state.dataKeyalumBars];\r\n    const steelSheets = MaterialProvider.steelSheets[this.state.dataKeysteelSheets];\r\n    const rubberBands = MaterialProvider.rubberBands[this.state.dataKeyrubberBands];\r\n    const lightBulbs = MaterialProvider.lightBulbs[this.state.dataKeylightBulbs];\r\n    const leds = MaterialProvider.leds[this.state.dataKeyleds];\r\n    const springsProvider = MaterialProvider.springsProvider[this.state.dataKeyspringsProvider];\r\n    const speakersProvider = MaterialProvider.speakersProvider[this.state.dataKeyspeakersProvider];\r\n\r\n\t\t// if it exists, then we display its value\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Aluminum bars</th>\r\n              <th scope=\"col\">Stainless steel sheets</th>\r\n              <th scope=\"col\">Springs </th>\r\n              <th scope=\"col\">Bumper rubber bands</th>\r\n              <th scope=\"col\">Interior light bulbs</th>\r\n              <th scope=\"col\">Display LEDs</th>\r\n              <th scope=\"col\">Speakers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{alumBars && alumBars.value}</td>\r\n              <td>{steelSheets && steelSheets.value}</td>\r\n              <td>{rubberBands && rubberBands.value}</td>\r\n              <td>{lightBulbs && lightBulbs.value}</td>\r\n              <td>{leds && leds.value}</td>\r\n              <td>{springsProvider && springsProvider.value}</td>\r\n              <td>{speakersProvider && speakersProvider.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MaterialProviderRead;\r\n"]},"metadata":{},"sourceType":"module"}